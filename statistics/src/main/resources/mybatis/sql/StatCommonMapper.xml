<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yonyou.iuap.baseservice.statistics.dao.StatCommonMapper">

    <sql id="orderClause">
        <if test="page != null">
            <if test="page.sort!=null">
                order by
                <foreach collection="page.sort" item="item" separator=",">
                    ${item.property}  ${item.direction}
                </foreach>
            </if>
        </if>
        <if test="page == null or page.sort==null">
                order by ts DESC
        </if>
    </sql>
    
    <sql id="whereClause">
        <where>
            1=1
            <if test="whereStatements != null and whereStatements.size>0 ">
                <foreach collection="whereStatements" item="item">
                    <if test="item.condition == 'EQ'">
                        and t.${item.key} = #{item.value}
                    </if>
                    <if test="item.condition == 'GT'">
                        and t.${item.key} &gt; #{item.value}
                    </if>
                    <if test="item.condition == 'LT'">
                        and t.${item.key} &lt; #{item.value}
                    </if>
                    <if test="item.condition == 'GTEQ'">
                        and t.${item.key} &gt;= #{item.value}
                    </if>
                    <if test="item.condition == 'LTEQ'">
                        and t.${item.key} &lt;= #{item.value}
                    </if>
                    <if test="item.condition == 'LIKE'">
                        and t.${item.key} LIKE CONCAT(CONCAT('%', #{item.value}), '%')
                    </if>
                    <if test="item.condition == 'LLIKE'">
                        and t.${item.key} LIKE CONCAT('%', #{item.value})
                    </if>
                    <if test="item.condition == 'RLIKE'">
                        and t.${item.key} LIKE CONCAT(#{item.value}, '%')
                    </if>
                    <if test="item.condition == 'RANGE' and item.value!=null   ">
                        and t.${item.key} between
                        <foreach collection="item.value" item="valueItem1"  separator=" and ">
                            '${valueItem1}'
                        </foreach>
                    </if>
                    <if test="item.condition == 'IN' and item.value!=null  ">
                        and t.${item.key} in(
                        <foreach collection="item.value" item="valueItem2"  separator=" , ">
                            '${valueItem2}'
                        </foreach>
                        )
                    </if>
                    <if test="item.condition == 'UEQ'">
                        and t.${item.key} != #{item.value}
                    </if>
                    <if test="item.condition == 'ULIKE'">
                        and t.${item.key} NOT LIKE CONCAT(CONCAT('%', #{item.value}), '%')
                    </if>
                    <if test="item.condition == 'START'">
                        and t.${item.key} LIKE CONCAT(#{item.value}, '%')
                    </if>
                    <if test="item.condition == 'END'">
                        and t.${item.key} LIKE CONCAT('%', #{item.value})
                    </if>

                    <if test="item.condition == 'OTHER'">
                        and   ${item.value}
                    </if>
                </foreach>
            </if>
        </where>

    </sql>

    <sql id="selectClause">

        SELECT
        <if test="groupStatements != null and groupStatements.size > 0">
            <foreach collection="groupStatements" item="item" separator=",">
                ${item}
            </foreach>
        </if>
        <if test="statStatements!= null and statStatements.size > 0">
            <foreach collection="statStatements" item="item" separator=" ">
                ,${item}
            </foreach>
        </if>

        from ${tableName} t
        <include refid="whereClause"/>
        
        <if test="condition.searchMap.groupParams!= null and condition.searchMap.groupParams.size > 0">
            GROUP BY
            <foreach collection="condition.searchMap.groupParams" item="item" separator=",">
                ${item}
            </foreach>
        </if>


    </sql>

    <select id="findAll" resultType="java.util.HashMap">
        <include refid="selectClause"/>
        <include refid="orderClause"/>
    </select>


    <select id="selectAllByPage"
            resultType="java.util.HashMap">
        <include refid="selectClause"/>
        <include refid="orderClause"/>
    </select>

    <select id="findDistinct" resultType="java.util.HashMap">
        select distinct
        <if test="statStatements!= null  and statStatements.size > 0 ">
            <foreach collection="statStatements" item="item" separator=",">
                ${item}
            </foreach>
        </if>
        FROM ${tableName} t
        <include refid="whereClause"/>
    </select>
</mapper>
